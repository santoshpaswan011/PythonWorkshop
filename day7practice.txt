Python 3.12.6 (tags/v3.12.6:a4a2d2b, Sep  6 2024, 20:11:23) [MSC v.1940 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
class car:
    def__init__(self):
        
SyntaxError: invalid syntax
class car:
    def__init__(self):
        
SyntaxError: invalid syntax
class car:
    def _init_(self):
        self.brand="Suzuki"
        self.color="Blue"
        self.top_speed=200

        
car=car()
car.brand
Traceback (most recent call last):
  File "<pyshell#9>", line 1, in <module>
    car.brand
AttributeError: 'car' object has no attribute 'brand'
class car:
    def __init__(self):
        self.brand="Suzuki"
        self.color="Blue"
        self.top_speed=200

        
car=car()
car.brand
SyntaxError: invalid syntax
class car:
    def __init__(self):
        self.brand="Suzuki"
        self.color="Blue"
        self.top_speed=200

        

car=car()
car.brand
SyntaxError: multiple statements found while compiling a single statement
class car:
    def __init__(self):
        self.brand="Suzuki"
        self.color="Blue"
        self.top_speed=200

        
car=car()
car.brand
'Suzuki'
car.color
'Blue'
class car:
    def __init__(self):
        self.brand="lamborghini"
        self.color="Black"
        self.top_speed=600

        
car=car()
car.brand
SyntaxError: invalid syntax
class car:
    def __init__(self):
        self.brand="lamborghini"
        self.color="Black"
        self.top_speed=600

        
car=car()
car.brand
'lamborghini'
car.speed
Traceback (most recent call last):
  File "<pyshell#25>", line 1, in <module>
    car.speed
AttributeError: 'car' object has no attribute 'speed'
car=car("Tata","Grey",225)
Traceback (most recent call last):
  File "<pyshell#26>", line 1, in <module>
    car=car("Tata","Grey",225)
TypeError: 'car' object is not callable
class car:
    def __init__(self):
        self.brand="lamborghini"
        self.color="Black"
        self.top_speed=ts
        def accelerate (self):
            print("your car top speed is:",self.top_speed)

            


class car:
    def __init__(self):
        self.brand="lamborghini"
        self.color="Black"
        self.top_speed=ts
     def accelerate (self):
            print("your car top speed is:",self.top_speed)
            
SyntaxError: unindent does not match any outer indentation level
SyntaxError: unindent does not match any outer indentation level
SyntaxError: invalid syntax
class car:
    def __init__(self):
        self.brand="lamborghini"
        self.color="Black"
        self.top_speed=ts
     def accelerate (self):
            print("your car top speed is:",self.top_speed)
            
SyntaxError: unindent does not match any outer indentation level
class car:
    def __init__(self):
        self.brand="lamborghini"
        self.color="Black"
        self.top_speed=ts
     def accelerate (self):
         
SyntaxError: unindent does not match any outer indentation level
class car:
    def __init__(self):
        self.brand="lamborghini"
        self.color="Black"
        self.top_speed=ts
     def accelerate (self):
         
SyntaxError: unindent does not match any outer indentation level

class car:
    def __init__(self):
        self.brand="lamborghini"
        self.color="Black"
        self.top_speed=ts
    def accelerate (self):
            print("your car top speed is:",self.top_speed)

            
car=car
class car:
    def __init__(self,b,c,ts):
        self.brand=b
        self.color=c
        self.top_speed=ts
...     def accelerate (self):
...             print("your car top speed is:",self.top_speed)
... 
... 
>>> car=car("tata","grey",225)
>>> car.accelerate()
your car top speed is: 225
>>> class college:
...     def __init (self,n,loc)
...     
SyntaxError: expected ':'
>>> class college:
...     def __init__(self,n,loc)
...     
SyntaxError: expected ':'
>>> class college:
...     def __init__(self,n,loc):
...         self.name=n
...         self location=loc
...         
SyntaxError: invalid syntax
>>> class college:
...     def __init__(self,n,loc):
...         self.name=n
...         self.location=loc
...     def msg(self):
...         print(self.name+ "is present at "+self.loc)
... 
...         
>>> class Department(College):
...     def __init__(self,name,ids):
...         self.id=ids
... 
...         
Traceback (most recent call last):
  File "<pyshell#61>", line 1, in <module>
    class Department(College):
NameError: name 'College' is not defined. Did you mean: 'college'?
